<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="utf-8">
  <title>Millennium Falcon</title>
  <script async src="https://unpkg.com/es-module-shims@1.6.3/dist/es-module-shims.js"></script>
  <script type="importmap">
      {
        "imports": {
          "three": "https://unpkg.com/three@v0.163.0/build/three.module.js",
          "three/addons/": "https://unpkg.com/three@v0.163.0/examples/jsm/"
        }
      }
    </script>
    <style>
*{
  font-family: sans-serif;
  margin: 0;
  padding: 0;
}

html { 
  scroll-behavior: smooth; 
}
section { 
  padding-top: 150px; 
}

body {
  min-height: 100vh;
  background-color: #1C1C1C;
  margin: 0;
  font-family: 'SF Distant Galaxy';
}

#heading {
  position: fixed;
  width: 100%;
  padding: 32px;
}

.border {
  background: linear-gradient(90deg, gray, 90%, black);
  height: 2px;
  width: 80vw;
  margin-top: 4px;
}

h1 {
  color: black;
  font-size: 4em;
  margin: 0px;
  font-weight: 100;
}

/*Nav Bar*/
nav{
  background-color: #1C1C1C;
}

nav ul{
  width: 100%;
  list-style: none;
  display: flex;
  justify-content: center;
  align-items: center;
  gap: 5px;
}

nav li{
  height: 100px;
}

nav a{
  font-size: 1.3em;
  height: 100%;
  padding: 0 30px;
  text-decoration: none;
  display: flex;
  align-items: center;
  color:  #B0B0B0;
}

nav a:hover{
  background-color: #1a1a1a;
}

.sidebar{
  position: fixed;
  top: 0;
  right: 0;
  height: 100vh;
  width: 250px;
  z-index: 999;
  background-color: #1a1a1a;
  display: none;
  flex-direction: column;
  align-items: flex-start;
  justify-content: flex-start;
}

.sidebar li{
  width: 100%;
}

.sidebar a{
  width: 100%;
}

.sign{
  background-color: #00AEFE;
  color: white;
  height: 50px;
  border-radius: 5px;
  margin-top: 1.25em;
}

.sign:hover{
  background-color: #00AEFE;
}

.menu-button{
  display: none;
}

/*Car Loading*/
#progress-container {
  position: fixed;
  width: 100%;
  height: 100%;
  display: flex;
  justify-content: center;
  align-items: center;
}

#progress {
  font-size: 3em;
  color: black;
}

/*Changing car colors*/
h2{
  font-size: 1.8em;
  position: absolute;
  color:  #B0B0B0;
  text-align: center;
  top: 70%;
  left: 50%;
  transform: translate(-50%, -50%);
}

.buttons-container{
  position: absolute;
  display: flex;
  flex-wrap: wrap;
  justify-content: space-around;
  gap: 20px;
  max-width: fit-content;
  top: 80%;
  left: 50%;
  transform: translate(-50%, -50%);
  background-color: #282828;
  padding: 1rem;
  border-radius: 5px;
}

.buttons-container button{
  border: none;
  width: 80px;
  height: 70px;
  background-color: none;
  border-radius: 2px;
  cursor: pointer;
}

.buttons-container button:nth-child(1){
  background-color: #730099;
}

.buttons-container button:nth-child(2){
  background-color: #ffad33;
}

.buttons-container button:nth-child(3){
  background-color: #cc2900;
}

.buttons-container button:nth-child(4){
  background-color: #4d94ff;
}

/*Arrows*/
.arrow{
  position: absolute;
  top: 92%;
  left: 50%;
  transform: translate(-50%, -50%);
}

.arrow span{
  display: block;
  width: 25px;
  height: 25px;
  border-bottom: 5px solid #E0E0E0;
  border-right: 5px solid #E0E0E0;
  transform: rotate(45deg);
  margin: -10px;
  animation: scroll 2s infinite;
}

.arrow span:nth-child(1){
  animation-delay: -.2s;
}

.arrow span:nth-child(2){
  animation-delay: -.4s;
}

@keyframes scroll{
  0%{
    opacity: 0;
    transform: rotate(45deg) translate(-5px, -5px);
  }
  50%{
    opacity: 1;
  }
  100%{
    opacity: 0;
    transform: rotate(45deg) translate(5px, 5px);
  }
}

/*Wheel section*/
.swheel-section{
  position: absolute;
  top: 130%;
  left: 50%;
  transform: translate(-50%, -50%);
  display: flex;
  flex-direction: column;
  gap: 20px;
  align-items: center;
  opacity: 0;
  transition: all 1s;
  filter: blur(5px);
  transform: translateX(-100%);
}

.swheel-section h2{
  margin-top: -10em;
}

.swheel-section img{
  width: 200px;
  height: 200px;
}

.swheel-section p{
  font-size: 1.3em;
  color: #B0B0B0;
  text-align: center;
}

/*Wheels*/
.wheel-section{
  position: absolute;
  top: 200%;
  left: 50%;
  transform: translate(-50%, -50%);
  display: flex;
  flex-direction: column;
  gap: 20px;
  align-items: center;
  opacity: 0;
  transition: all 1s;
  filter: blur(5px);
  transform: translateX(-100%);
}

.wheel-section img{
  transition-delay: 2s;
  width: 200px;
  height: 200px;
}

.wheel-section p{
  font-size: 1.3em;
  color: #B0B0B0;
  text-align: center;
}

.wheel-section h2{
  margin-top: -18rem;
}

/*Engine*/
.engine-section{
  position: absolute;
  top: 270%;
  left: 50%;
  transform: translate(-50%, -50%);
  display: flex;
  flex-direction: column;
  gap: 20px;
  align-items: center;
  opacity: 0;
  transition: all 1s;
  filter: blur(5px);
  transform: translateX(-100%);
  padding-bottom: 5rem;
}

.engine-section img{
  transition-delay: 2s;
  width: 200px;
  height: 200px;
}

.engine-section p{
  font-size: 1.3em;
  color: #B0B0B0;
  text-align: center;
}

.engine-section h2{
  margin-top: -18rem;
}

.show{
  opacity: 1;
  filter: blur(0);
  transform: translateX(-50%);
}


@media(prefers-reduced-motion){
  .wheel-section{
    transition: none;
  }
}


/*Divider*/
.divider{
  position: absolute;
  text-align: center;
  top: 310%;
}

/*Phone*/
@media (max-width: 540px){
  h2{
    top: 65%;
  }
  .sidebar{
    width: 100%;
  }
}

/*Tablet*/
@media (max-width: 850px){
  h2{
    top: 65%;
  }
  .hideOnMobile{
    display: none;
  }
  .menu-button{
    display: block;
  }
  nav ul{
    justify-content: flex-end;
  }
  .swheel-section h2{
    display: none;
  }
  .wheel-section h2{
    display: none;
  }
  .engine-section h2{
    display: none;
  }
  .arrow{
    top: 95%;
  }
  section{
    padding-top: 20px;
  }
}
    </style>
</head>

<body>
  <!--Nav Bar-->
  <nav>
    <ul class="sidebar">
      <li onclick=hideSidebar()><a href="#"><svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" width="26"
            height="26" viewBox="0,0,256,256">
            <g fill="#dbdbdb" fill-rule="nonzero" stroke="none" stroke-width="1" stroke-linecap="butt"
              stroke-linejoin="miter" stroke-miterlimit="10" stroke-dasharray="" stroke-dashoffset="0"
              font-family="none" font-weight="none" font-size="none" text-anchor="none" style="mix-blend-mode: normal">
              <g transform="scale(8.53333,8.53333)">
                <path
                  d="M7,4c-0.25587,0 -0.51203,0.09747 -0.70703,0.29297l-2,2c-0.391,0.391 -0.391,1.02406 0,1.41406l7.29297,7.29297l-7.29297,7.29297c-0.391,0.391 -0.391,1.02406 0,1.41406l2,2c0.391,0.391 1.02406,0.391 1.41406,0l7.29297,-7.29297l7.29297,7.29297c0.39,0.391 1.02406,0.391 1.41406,0l2,-2c0.391,-0.391 0.391,-1.02406 0,-1.41406l-7.29297,-7.29297l7.29297,-7.29297c0.391,-0.39 0.391,-1.02406 0,-1.41406l-2,-2c-0.391,-0.391 -1.02406,-0.391 -1.41406,0l-7.29297,7.29297l-7.29297,-7.29297c-0.1955,-0.1955 -0.45116,-0.29297 -0.70703,-0.29297z">
                </path>
              </g>
            </g>
          </svg></a></li>
      <li><a href="#swheel">Steering Wheel</a></li>
      <li><a href="#wheel">Wheels</a></li>
      <li><a href="#engine">Engine</a></li>
      <li><a href="/register" class="sign">Sign up</a></li>
      <!--<li><a href="#">Endurance</a></li>-->
      <!--<li><a href="#">Power</a></li>-->
    </ul>
    <ul>
      <li class="hideOnMobile"><a href="#swheel">Steering Wheel</a></li>
      <li class="hideOnMobile"><a href="#wheel">Wheels</a></li>
      <li class="hideOnMobile"><a href="#engine">Engine</a></li>
      <li><a href="/register" class="sign">Sign up</a></li>
      <!--<li class="hideOnMobile"><a href="#">Endurance</a></li>-->
      <!--<li class="hideOnMobile"><a href="#">Power</a></li>-->
      <li class="menu-button" onclick=showSidebar()><a href="#"><svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px"
            width="26" height="26" viewBox="0,0,256,256">
            <g fill="#dbdbdb" fill-rule="nonzero" stroke="none" stroke-width="1" stroke-linecap="butt"
              stroke-linejoin="miter" stroke-miterlimit="10" stroke-dasharray="" stroke-dashoffset="0"
              font-family="none" font-weight="none" font-size="none" text-anchor="none" style="mix-blend-mode: normal">
              <g transform="scale(5.12,5.12)">
                <path
                  d="M5,8c-0.72127,-0.0102 -1.39216,0.36875 -1.75578,0.99175c-0.36361,0.623 -0.36361,1.39351 0,2.01651c0.36361,0.623 1.0345,1.00195 1.75578,0.99175h40c0.72127,0.0102 1.39216,-0.36875 1.75578,-0.99175c0.36361,-0.623 0.36361,-1.39351 0,-2.01651c-0.36361,-0.623 -1.0345,-1.00195 -1.75578,-0.99175zM5,23c-0.72127,-0.0102 -1.39216,0.36875 -1.75578,0.99175c-0.36361,0.623 -0.36361,1.39351 0,2.01651c0.36361,0.623 1.0345,1.00195 1.75578,0.99175h40c0.72127,0.0102 1.39216,-0.36875 1.75578,-0.99175c0.36361,-0.623 0.36361,-1.39351 0,-2.01651c-0.36361,-0.623 -1.0345,-1.00195 -1.75578,-0.99175zM5,38c-0.72127,-0.0102 -1.39216,0.36875 -1.75578,0.99175c-0.36361,0.623 -0.36361,1.39351 0,2.01651c0.36361,0.623 1.0345,1.00195 1.75578,0.99175h40c0.72127,0.0102 1.39216,-0.36875 1.75578,-0.99175c0.36361,-0.623 0.36361,-1.39351 0,-2.01651c-0.36361,-0.623 -1.0345,-1.00195 -1.75578,-0.99175z">
                </path>
              </g>
            </g>
          </svg></a></li>
    </ul>
  </nav>

  <!--Car Loading-->
  <div id="progress-container">
  </div>

  <!--Changing car colors buttons-->
  <h2>Car Colors</h2>
  <div class="buttons-container">
    <button id="button1"></button>
    <button id="button2"></button>
    <button id="button3"></button>
    <button id="button4"></button>
  </div>

  <!--Arrows before section-->
  <div class="arrow">
    <span></span>
    <span></span>
  </div>

  <!--Steering wheel-->
  <section class="swheel-section" id="swheel">
      <h2>Steering Wheel</h2>
      <img src="/images/<%= inWheel %>" alt="Dynamic Image" class="autoRotate" />
      <p>With an outer diameter of 35 cm (13.78 inches), the Porsche Classic Performance steering wheel offers optimum
        control and driving pleasure. Additional information: This steering wheel is designed exclusively for racing and
        has no road approval.</p>
  </section>

  <!--Wheels-->
  <section class="wheel-section" id="wheel">
    <h2>Wheels</h2>
    <img src="/images/<%= wheel %>" alt="Dynamic Image" />
    <p>The Porsche 911 uses a 5×130 bolt pattern. This means it has 5 lug nuts in a circle, with a 130mm distance across. I've worked on many 911s, and this pattern has stayed the same for years. It's a key part of how the car stays stable at high speeds.</p>
  </section>

  <!--Engine-->
  <section class="engine-section" id="engine">
    <h2>Engine</h2>
    <img src="/images/<%= engine %>" alt="Dynamic Image" />
    <p>The Porsche 911 has 3 Petrol Engine on offer. The Petrol engine is 2981 cc and 3996 cc and 3745 cc . It is available with Automatic transmission. Depending upon the variant and fuel type the 911 has a mileage of 10.64 kmpl.</p>
  </section>

  <script>
    const observer = new IntersectionObserver((entries) => {
    entries.forEach((entry) => {
        if(entry.isIntersecting){
            entry.target.classList.add("show");
        }else{
            entry.target.classList.remove("show");
        }
    });
});

const hiddenSteeringWheel = document.querySelector(".swheel-section");
const hiddenWheel = document.querySelector(".wheel-section");
const hiddenEngine = document.querySelector(".engine-section");
observer.observe(hiddenSteeringWheel);
observer.observe(hiddenWheel);
observer.observe(hiddenEngine);
  </script>

  <script type="module">
    window.onscroll = function () {
    scrollRotate();
    };

    function scrollRotate() {
       let image = document.querySelector(".autoRotate");
       image.style.transform = "rotate(" + window.pageYOffset / 2 + "deg)";
    }
  </script>

  <script type="module">
    import * as THREE from 'three';
import { GLTFLoader } from 'three/addons/loaders/GLTFLoader.js';
import { OrbitControls } from 'three/addons/controls/OrbitControls.js';

const renderer = new THREE.WebGLRenderer({ antialias: true });
renderer.outputColorSpace = THREE.SRGBColorSpace;

renderer.setSize(window.innerWidth, window.innerHeight);
renderer.setClearColor("#1C1C1C");

document.body.appendChild(renderer.domElement);

const scene = new THREE.Scene();

const camera = new THREE.PerspectiveCamera(45, window.innerWidth / window.innerHeight, 1, 1000);
camera.position.set(15, 10, 25);

const controls = new OrbitControls(camera, renderer.domElement);
controls.enableDamping = true;
controls.enablePan = false;
controls.minDistance = 7;
controls.maxDistance = 7;
controls.minPolarAngle = 1.2;
controls.maxPolarAngle = 1.2;
controls.autoRotate = false;
controls.target = new THREE.Vector3(0, -0.5, 0);
controls.update();

const groundGeometry = new THREE.PlaneGeometry(20, 20, 32, 32);
groundGeometry.rotateX(-Math.PI / 2);

const groundMaterial = new THREE.Color({
  color: "#222222",
});

const groundMesh = new THREE.Mesh(groundGeometry, groundMaterial);
scene.add(groundMesh);

const spotLight = new THREE.SpotLight("#F9FAFB", 2000, 50, 3, 1);
spotLight.position.set(0, 15, 0);
scene.add(spotLight);

const loader = new GLTFLoader().setPath('car/');
loader.load('scene.gltf', (gltf) => {
  console.log('loading model');
  let mesh = gltf.scene;
  mesh.position.set(0, 1, 0);
  scene.add(mesh);

  //Colors
  let button = document.getElementById("button1");
  let button2 = document.getElementById("button2");
  let button3 = document.getElementById("button3");
  let button4 = document.getElementById("button4");

  button.addEventListener("click", changeColor);
  button2.addEventListener("click", changeSecondColor);
  button3.addEventListener("click", changeThirdColor);
  button4.addEventListener("click", changeFourthColor);

  function changeColor(e){
    loader.load('purple.gltf', (gltf) => {
      console.log('loading model');
      mesh = gltf.scene;
      mesh.position.set(0, 1, 0);
      scene.add(mesh);
    });
    scene.remove(mesh);
  }

  function changeSecondColor(e){
    loader.load('orange.gltf', (gltf) => {
      console.log('loading model');
      mesh = gltf.scene;
      mesh.position.set(0, 1, 0);
      scene.add(mesh);
    });
    scene.remove(mesh);
  }

  function changeThirdColor(e){ 
    loader.load('red.gltf', (gltf) => {
      console.log('loading model');
      mesh = gltf.scene;
      mesh.position.set(0, 1, 0);
      scene.add(mesh);
    });
    scene.remove(mesh);
  }

  function changeFourthColor(e){
    loader.load('blue.gltf', (gltf) => {
      console.log('loading model');
      mesh = gltf.scene;
      mesh.position.set(0, 1, 0);
      scene.add(mesh);
    });
    scene.remove(mesh);
  }
  
  //Loading Car
  document.getElementById('progress-container').style.display = 'none';
}, (xhr) => {
  console.log(`loading ${xhr.loaded / xhr.total * 100}%`);
}, (error) => {
  console.error(error);
});

//Resizing
window.addEventListener('resize', () => {
  camera.aspect = window.innerWidth / window.innerHeight;
  camera.updateProjectionMatrix();
  renderer.setSize(window.innerWidth, window.innerHeight);
});

//Animate Car
function animate() {
  requestAnimationFrame(animate);
  controls.update();
  renderer.render(scene, camera);
}

animate();

  </script>

  <script>
    function showSidebar() {
      const sidebar = document.querySelector(".sidebar");
      sidebar.style.display = "flex";
    }

    function hideSidebar() {
      const sidebar = document.querySelector(".sidebar");
      sidebar.style.display = "none";
    }
  </script>
</body>

</html>